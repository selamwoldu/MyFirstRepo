1. What is the difference between the following 2 statements? setTimeout(booyah, 2000); setTimeout(booyah(), 2000);* The first statement is the good way of writing the function in set Timeout, because it doesnÕt call the function immediately, it does wait the time set out. However, the second statement it calls the function booyah immediately, rather than waiting the time delay given.2. What do the following 2 alerts display (answer without running the code)? var myfunc = function(a, x) { return a * x; }; var x = myfunc(2, 3); var y = myfunc; alert(x); alert(y(2,3)); * Both alerts will display 6 though they pass the parameters in different way.3. Write functions booyah1 and booyah2 so that in both cases below, an alert box comes up after 2 seconds that says ÒBOOYAH!Ó setTimeout(booyah1, 2000); setTimeout(booyah2(), 2000);* function booyah1() {      alert(ÒBOOYAH!Ó) ;}* function booyah2() {      setTimeout(booyah1, 2000); }4. What is "Unobtrusive Javascript"? What is the practical application of Unobtrusive Javascript (and the reasons for using it)?* Unobtrusive JavaScript means separation of JavaScript code from the html. It allows separation of web site into 3 major categories: * ? Êcontent (HTML) - what is it? * ? Êpresentation (CSS) - how does it look? * ? Êbehavior (JavaScript) - how does it respond to user interaction? ==> keeps the code clean, and allows you to work on the JavaScript without touching either HTML or CSS==> Reusable code (both HTML and JavaScript code)==> Progressive enhancement.